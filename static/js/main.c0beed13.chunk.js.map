{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/memories.png","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tags","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0beed13.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\n","\r\nimport {combineReducers} from 'redux';\r\nimport posts from './posts';\r\nexport default combineReducers({posts});","import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes';\r\nexport default (posts = [], action)=> {\r\n  switch (action.type){\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    case UPDATE:\r\n      return posts.map((post)=>post._id=== action.payload._id ? action.payload : post);\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    default:\r\n      return posts;    \r\n  }\r\n}","import axios from 'axios';\r\n\r\nconst url = 'http://localhost:5000/posts';\r\n\r\nexport const fetchPosts = () =>axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost)\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n\r\nimport useStyles from './styles';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nconst Post = ({post, setCurrentId}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Card className = {classes.card}>\r\n       <CardMedia className = {classes.media} image = {post.selectedFile} title = {post.title}/>\r\n       <div className = {classes.overlay}>\r\n         <Typography variant =\"h6\" >{post.creator}</Typography>\r\n         <Typography variant =\"body2\" >{moment(post.createdAt).fromNow()}</Typography>\r\n       </div>\r\n       <div className={classes.overlay2}>\r\n         <Button style = {{color:'white'}} size = \"small\" onClick={() => setCurrentId(post._id)}>\r\n          <MoreHorizIcon fontSize=\"default\"/>\r\n         </Button>\r\n       </div>\r\n       <div className={classes.details}>\r\n       <Typography variant =\"body2\" color='textSecondary' >{post.tags.map((tag)=>`#${tag} `)}</Typography>\r\n       </div>\r\n       <Typography className={classes.title} variant='h5' gutterBottom> {post.title}</Typography>\r\n       <CardContent>\r\n         <Typography variant='body2' color='textSecondary' component='p'> {post.message}</Typography>\r\n       </CardContent>\r\n       <CardActions className={classes.cardActions}>\r\n         <Button size='small' color ='primary' onClick={() =>dispatch(likePost(post._id))}>\r\n           <ThumbUpAltIcon fontSize='small'/>\r\n           &nbsp; Like &nbsp; \r\n           {post.likeCount}\r\n         </Button>\r\n         <Button size='small' color ='primary' onClick={() =>dispatch(deletePost(post._id))}>\r\n           <DeleteIcon fontSize='small'/>\r\n           Delete \r\n         </Button>\r\n       </CardActions>\r\n       \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;","import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n// Action Creators\r\nexport const getPosts = () => async(dispatch) => {\r\n\r\n    try {\r\n      const {data} = await api.fetchPosts();\r\n      dispatch({ type: FETCH_ALL, payload: data})\r\n\r\n    }catch (error){\r\n      console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async(dispatch)=>{\r\n  \r\n  try{\r\n    const {data} = await api.createPost(post);\r\n    dispatch({ type: CREATE, payload: data});\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost =(id, post) => async (dispatch)=>{\r\n  try {\r\n    const {data} = await api.updatePost(id, post);\r\n    dispatch({type: UPDATE, payload:data});\r\n  } catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch)=>{\r\n  try{\r\n      await api.deletePost(id);\r\n      dispatch({type: DELETE, payload: id});\r\n  } catch(error){\r\n     console.log(error);\r\n  }\r\n}\r\n\r\nexport const likePost=(id)=> async(dispatch) => {\r\n  try{\r\n    const {data} = await api.likePost(id);\r\n    dispatch({type: UPDATE, payload: data});\r\n  } catch (error){\r\n    console.log(error);\r\n  }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport {Grid, CircularProgress} from '@material-ui/core';\r\nimport {useSelector} from 'react-redux';\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n  const posts = useSelector((state)=> state.posts );\r\n  const classes = useStyles();\r\n  console.log(posts);\r\n\r\n  return (\r\n    !posts.length ? <CircularProgress/> : (\r\n      <Grid className = {classes.container} container alignItems = 'stretch' spacing={3}>\r\n        {posts.map((post) => \r\n          <Grid key = {post._id} item xs ={12} sm={6}>\r\n            <Post post={post} setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n            )}\r\n      </Grid>\r\n      ));\r\n  \r\n}; \r\n  \r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch,useSelector } from 'react-redux';\r\n\r\n\r\nimport useStyles from './styles';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n  const [postData, setPostData] = useState ({\r\n     creator: '',\r\n     title:'',\r\n     message: '',\r\n     tags: '', \r\n     selectedFile:''\r\n  });\r\n  const post = useSelector((state)=> currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    if (post) setPostData(post);\r\n  }, [post])\r\n\r\n  const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n     if(currentId){\r\n       dispatch(updatePost(currentId, postData));     \r\n     }else{\r\n       dispatch(createPost(postData)); \r\n     }\r\n     clear();\r\n  }\r\n\r\n  const clear = () =>{\r\n      setCurrentId(null);\r\n      setPostData({creator: '', title: '', message:'', tags: '', selectedFile: ''});\r\n  }\r\n  return (\r\n    <Paper className = {classes.paper}>\r\n      <form autoComplete = \"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit = {handleSubmit}>\r\n      <Typography variant = \"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n      <TextField \r\n      name=\"creator\" \r\n      variant = \"outlined\" \r\n      label=\"Creator\" \r\n      fullWidth\r\n      value={postData.creator}\r\n      onChange={(e) => setPostData({ ...postData, creator: e.target.value})}\r\n       />\r\n       <TextField \r\n      name=\"title\" \r\n      variant = \"outlined\" \r\n      label=\"Title\" \r\n      fullWidth\r\n      value={postData.title}\r\n      onChange={(e) => setPostData({ ...postData, title: e.target.value})}\r\n       />\r\n       <TextField \r\n      name=\"message\" \r\n      variant = \"outlined\" \r\n      label=\"Message\" \r\n      fullWidth\r\n      value={postData.message}\r\n      onChange={(e) => setPostData({ ...postData, message: e.target.value})}\r\n       />\r\n       <TextField \r\n      name=\"Tags\" \r\n      variant = \"outlined\" \r\n      label=\"Tags\" \r\n      fullWidth\r\n      value={postData.tags}\r\n      onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})}\r\n       />\r\n\r\n       <div className = {classes.fileInput}>\r\n        <FileBase\r\n          type = 'file'\r\n          multiple = {false}\r\n          onDone = {({base64}) => setPostData({ ...postData, selectedFile:base64 })}\r\n        />\r\n       </div>\r\n       <Button className = {classes.buttonSubmit} variant = 'contained' color ='primary' size ='large' type = 'submit' fullWidth\r\n       >\r\n        Submit \r\n       </Button>\r\n       <Button variant = 'contained' color ='secondary' size ='small' onClick ={clear} fullWidth\r\n       >\r\n        Clear\r\n       </Button>\r\n      </form>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/memories.a5fad996.png\";","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  }, \r\n  [theme.breakpoints.down('sm')]: {\r\n    mainContainer: {\r\n    flexDirection:\"column-reverse\",\r\n  }\r\n  }\r\n  \r\n}));","\r\nimport React, { useState , useEffect } from 'react';\r\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport {getPosts} from './actions/posts';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport memories from './images/memories.png';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst App = ()=>{\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n     dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n  return (\r\n    <Container maxidth = 'lg'>\r\n      <AppBar className = {classes.appBar} position = 'static' color = 'inherit'>\r\n        <Typography className = {classes.heading} variant = 'h2' align = 'center'></Typography>\r\n        <img className={classes.image} src = {memories} alt = 'memories' height='100'/>\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid className={classes.mainContainer} container  justify = 'space-between' alignItems = 'stretch' spacing = {3}>\r\n            <Grid item xs = {12} sm = {7}>\r\n              <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs = {12} sm = {4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nimport App  from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n<Provider store = {store}>\r\n  <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}